{"ast":null,"code":"import _toConsumableArray from \"/home/setiyawan/Documents/AI/tauah/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/setiyawan/Documents/AI/tauah/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/setiyawan/Documents/AI/tauah/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/setiyawan/Documents/AI/tauah/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/setiyawan/Documents/AI/tauah/src/App.js\";\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\nimport \"@tensorflow/tfjs\";\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      records = _useState2[0],\n      setRecords = _useState2[1];\n\n  var videoElement = useRef(null);\n  var startButtonElement = useRef(null);\n  var stopButtonElement = useRef(null);\n  var shouldRecordRef = useRef(false);\n  var modelRef = useRef(null);\n  var recordingRef = useRef(false);\n  var lastDetectionsRef = useRef([]);\n  var recorderRef = useRef(null);\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n\n    function _prepare() {\n      _prepare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var stream, model;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                startButtonElement.current.setAttribute(\"disabled\", true);\n                stopButtonElement.current.setAttribute(\"disabled\", true);\n\n                if (!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.prev = 3;\n                _context.next = 6;\n                return navigator.mediaDevices.getUserMedia({\n                  audio: true,\n                  video: true\n                });\n\n              case 6:\n                stream = _context.sent;\n                window.stream = stream;\n                videoElement.current.srcObject = stream;\n                _context.next = 11;\n                return cocoSsd.load();\n\n              case 11:\n                model = _context.sent;\n                modelRef.current = model;\n                startButtonElement.current.removeAttribute(\"disabled\");\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](3);\n                console.error(_context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 16]]);\n      }));\n      return _prepare.apply(this, arguments);\n    }\n\n    prepare();\n  }, []);\n\n  function detectFrame() {\n    return _detectFrame.apply(this, arguments);\n  }\n\n  function _detectFrame() {\n    _detectFrame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var predictions, foundPerson, i;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (shouldRecordRef.current) {\n                _context2.next = 3;\n                break;\n              }\n\n              stopRecording();\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              _context2.next = 5;\n              return modelRef.current.detect(videoElement.current);\n\n            case 5:\n              predictions = _context2.sent;\n              foundPerson = false;\n\n              for (i = 0; i < predictions.length; i++) {\n                if (predictions[i].class === \"person\") {\n                  foundPerson = true;\n                }\n              }\n\n              if (foundPerson) {\n                startRecording();\n                lastDetectionsRef.current.push(true);\n              } else if (lastDetectionsRef.current.filter(Boolean).length) {\n                startRecording();\n                lastDetectionsRef.current.push(false);\n              } else {\n                stopRecording();\n              }\n\n              lastDetectionsRef.current = lastDetectionsRef.current.slice(Math.max(lastDetectionsRef.current.length - 10, 0));\n              requestAnimationFrame(function () {\n                detectFrame();\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _detectFrame.apply(this, arguments);\n  }\n\n  function startRecording() {\n    if (recordingRef.current) {\n      return;\n    }\n\n    recordingRef.current = true;\n    console.log(\"start recording\");\n    recorderRef.current = new MediaRecorder(window.stream);\n\n    recorderRef.current.ondataavailable = function (e) {\n      var title = new Date() + \"\";\n      var href = URL.createObjectURL(e.data);\n      setRecords(function (previousRecords) {\n        return [].concat(_toConsumableArray(previousRecords), [{\n          href,\n          title\n        }]);\n      });\n    };\n\n    recorderRef.current.start();\n  }\n\n  function stopRecording() {\n    if (!recordingRef.current) {\n      return;\n    }\n\n    recordingRef.current = false;\n    recorderRef.current.stop();\n    console.log(\"stopped recording\");\n    lastDetectionsRef.current = [];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    ref: videoElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-toolbar\",\n    role: \"toolbar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group mr-2\",\n    role: \"group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: function onClick() {\n      shouldRecordRef.current = true;\n      stopButtonElement.current.removeAttribute(\"disabled\");\n      startButtonElement.current.setAttribute(\"disabled\", true);\n      detectFrame();\n    },\n    ref: startButtonElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Start\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group mr-2\",\n    role: \"group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: function onClick() {\n      shouldRecordRef.current = false;\n      startButtonElement.current.removeAttribute(\"disabled\");\n      stopButtonElement.current.setAttribute(\"disabled\", true);\n      stopRecording();\n    },\n    ref: stopButtonElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Stop\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row p-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Records:\"), !records.length ? null : records.map(function (record) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-3 w-100\",\n      key: record.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, record.title), /*#__PURE__*/React.createElement(\"video\", {\n      id: \"playerVideo\",\n      width: \"450px\",\n      height: \"338px\",\n      controls: true,\n      src: record.href,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    })));\n  }))));\n};\n\nexport default App; // ReactDOM.render(<App />, document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/setiyawan/Documents/AI/tauah/src/App.js"],"names":["React","useRef","useEffect","useState","cocoSsd","App","records","setRecords","videoElement","startButtonElement","stopButtonElement","shouldRecordRef","modelRef","recordingRef","lastDetectionsRef","recorderRef","prepare","current","setAttribute","navigator","mediaDevices","getUserMedia","audio","video","stream","window","srcObject","load","model","removeAttribute","console","error","detectFrame","stopRecording","detect","predictions","foundPerson","i","length","class","startRecording","push","filter","Boolean","slice","Math","max","requestAnimationFrame","log","MediaRecorder","ondataavailable","e","title","Date","href","URL","createObjectURL","data","previousRecords","start","stop","map","record"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\nimport \"@tensorflow/tfjs\";\n\nconst App = () => {\n  const [records, setRecords] = useState([]);\n\n  const videoElement = useRef(null);\n  const startButtonElement = useRef(null);\n  const stopButtonElement = useRef(null);\n\n  const shouldRecordRef = useRef(false);\n  const modelRef = useRef(null);\n  const recordingRef = useRef(false);\n  const lastDetectionsRef = useRef([]);\n  const recorderRef = useRef(null);\n\n  useEffect(() => {\n    async function prepare() {\n      startButtonElement.current.setAttribute(\"disabled\", true);\n      stopButtonElement.current.setAttribute(\"disabled\", true);\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: true\n          });\n          window.stream = stream;\n          videoElement.current.srcObject = stream;\n          const model = await cocoSsd.load();\n\n          modelRef.current = model;\n          startButtonElement.current.removeAttribute(\"disabled\");\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n    prepare();\n  }, []);\n\n  async function detectFrame() {\n    if (!shouldRecordRef.current) {\n      stopRecording();\n      return;\n    }\n\n    const predictions = await modelRef.current.detect(videoElement.current);\n\n    let foundPerson = false;\n    for (let i = 0; i < predictions.length; i++) {\n      if (predictions[i].class === \"person\") {\n        foundPerson = true;\n      }\n    }\n\n    if (foundPerson) {\n      startRecording();\n      lastDetectionsRef.current.push(true);\n    } else if (lastDetectionsRef.current.filter(Boolean).length) {\n      startRecording();\n      lastDetectionsRef.current.push(false);\n    } else {\n      stopRecording();\n    }\n\n    lastDetectionsRef.current = lastDetectionsRef.current.slice(\n      Math.max(lastDetectionsRef.current.length - 10, 0)\n    );\n\n    requestAnimationFrame(() => {\n      detectFrame();\n    });\n  }\n\n  function startRecording() {\n    if (recordingRef.current) {\n      return;\n    }\n\n    recordingRef.current = true;\n    console.log(\"start recording\");\n\n    recorderRef.current = new MediaRecorder(window.stream);\n\n    recorderRef.current.ondataavailable = function(e) {\n      const title = new Date() + \"\";\n      const href = URL.createObjectURL(e.data);\n      setRecords(previousRecords => {\n        return [...previousRecords, { href, title }];\n      });\n    };\n\n    recorderRef.current.start();\n  }\n\n  function stopRecording() {\n    if (!recordingRef.current) {\n      return;\n    }\n\n    recordingRef.current = false;\n    recorderRef.current.stop();\n    console.log(\"stopped recording\");\n    lastDetectionsRef.current = [];\n  }\n\n  return (\n    <div className=\"p-3\">\n      <div>\n        <video autoPlay playsInline muted ref={videoElement} />\n      </div>\n      <div>\n        <div className=\"btn-toolbar\" role=\"toolbar\">\n          <div className=\"btn-group mr-2\" role=\"group\">\n            <button\n              className=\"btn btn-success\"\n              onClick={() => {\n                shouldRecordRef.current = true;\n                stopButtonElement.current.removeAttribute(\"disabled\");\n                startButtonElement.current.setAttribute(\"disabled\", true);\n                detectFrame();\n              }}\n              ref={startButtonElement}\n            >\n              Start\n            </button>\n          </div>\n          <div className=\"btn-group mr-2\" role=\"group\">\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => {\n                shouldRecordRef.current = false;\n                startButtonElement.current.removeAttribute(\"disabled\");\n                stopButtonElement.current.setAttribute(\"disabled\", true);\n                stopRecording();\n              }}\n              ref={stopButtonElement}\n            >\n              Stop\n            </button>\n          </div>\n        </div>\n        <div className=\"row p-3\">\n          <h3>Records:</h3>\n          {!records.length\n            ? null\n            : records.map(record => {\n                return (\n                  <div className=\"card mt-3 w-100\" key={record.title}>\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{record.title}</h5>\n                      <video\n                        id=\"playerVideo\"\n                        width=\"450px\"\n                        height=\"338px\"\n                        controls\n                        src={record.href}\n                      />\n                    </div>\n                  </div>\n                );\n              })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}